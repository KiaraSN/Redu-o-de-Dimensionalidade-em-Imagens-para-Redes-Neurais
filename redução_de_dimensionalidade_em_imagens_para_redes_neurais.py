# -*- coding: utf-8 -*-
"""Redução-de-Dimensionalidade-em-Imagens-para-Redes-Neurais.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yHfR1iBF2iGrKqtQr46lIpomIQAs6gLV
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import cv2  # OpenCV

img_path = "Lenna.png"  # ou faça upload no Colab

# Abrir imagem usando PIL
img_color = Image.open(img_path)
img_color = img_color.convert("RGB")  # garante 3 canais
plt.imshow(img_color)
plt.title("Imagem Colorida")
plt.axis('off')
plt.show()

img_array = np.array(img_color)
print("Shape da imagem:", img_array.shape)

# Usando OpenCV
img_gray = cv2.cvtColor(img_array, cv2.COLOR_RGB2GRAY)

plt.imshow(img_gray, cmap='gray')
plt.title("Imagem em Níveis de Cinza")
plt.axis('off')
plt.show()

# Definir threshold
threshold = 128  # valores acima viram 255, abaixo viram 0
_, img_binary = cv2.threshold(img_gray, threshold, 255, cv2.THRESH_BINARY)

plt.imshow(img_binary, cmap='gray')
plt.title("Imagem Binarizada (Preto e Branco)")
plt.axis('off')
plt.show()

plt.figure(figsize=(15,5))

plt.subplot(1,3,1)
plt.imshow(img_color)
plt.title("Colorida")
plt.axis('off')

plt.subplot(1,3,2)
plt.imshow(img_gray, cmap='gray')
plt.title("Cinza")
plt.axis('off')

plt.subplot(1,3,3)
plt.imshow(img_binary, cmap='gray')
plt.title("Binarizada")
plt.axis('off')

plt.show()

Image.fromarray(img_gray).save("lena_gray.png")
Image.fromarray(img_binary).save("lena_binary.png")
print("Imagens salvas: lena_gray.png e lena_binary.png")

def process_image(img_path, threshold=128):
    img_color = Image.open(img_path).convert("RGB")
    img_array = np.array(img_color)
    img_gray = cv2.cvtColor(img_array, cv2.COLOR_RGB2GRAY)
    _, img_binary = cv2.threshold(img_gray, threshold, 255, cv2.THRESH_BINARY)

    # Mostrar imagens
    plt.figure(figsize=(15,5))
    plt.subplot(1,3,1)
    plt.imshow(img_color)
    plt.title("Colorida")
    plt.axis('off')
    plt.subplot(1,3,2)
    plt.imshow(img_gray, cmap='gray')
    plt.title("Cinza")
    plt.axis('off')
    plt.subplot(1,3,3)
    plt.imshow(img_binary, cmap='gray')
    plt.title("Binarizada")
    plt.axis('off')
    plt.show()

    # Salvar
    Image.fromarray(img_gray).save("gray.png")
    Image.fromarray(img_binary).save("binary.png")
    print("Imagens salvas: gray.png e binary.png")

process_image("Lenna.png", threshold=128)

